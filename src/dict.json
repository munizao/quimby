{
"t": "the ",
"the": "the ",
"of": "of ",
"f": "of"
"ft": "of the",
"&": "and ",
"d": "and ",
"dt": "and the",
"a": "a ",
"in": "in ",
"n": "in ",
"it": "it ",
"s": "is",
"is": "is ",
//"ot": "to the",
"to": "to ",
"o": "to ",
//"w": "was",
"wa": "was ",
"ws": "was ",
"ts": "this",
"i ": "I ",
"fr": "for ",
"f/": "for",
//"g": "for",
//"th": "that",
"tha": "that ",
"t/": "that",
"w": "with ",
"wt": "with ", 
//"wi": "with",
"he": "he ",
"b": "be",
"be": "be ",
"beg": "being",
"bg": "being",
"on": "on ",
"by": "by ",
"at": "at ",
"u" : "you ",
"k": "can",
"h": "have",
"hv": "have ",
"hd": "had ",
"hvg": "having",
"hg": "having",
"ar": "are ",
"r": "are ",
"are": "are ",
"-": "not ",
"wr": "were",
"bt": "but ",
"bu": "but ",
"ty": "they ",
"fm": "from ",
"wi": "which",
"sh": "she ",
"se": "she ",
"or": "or ",
"an": "an ",
"we": "we ",
"as": "as ",
"do": "do ",
"dg": "doing",
"dog": "doing",
"di: "did ",
"bn": "been ",
"ter": "there ",
"tir" "their",
"wl": "will",
"wd ": "would",
"if: "if ",
"sy": "say",
"sd": "said ",
"sg": "saying",
"mk": "make",
"md": "made",
"mg": "making",
"shd": "should ",
"hm": "him",
"hr": "her",
"c": "see",
"cg": "seeing",
"cw": "saw",
"sw/": "saw"
"v": "very ",
"so": "so",
"my": "my ",
"up": "up",
"ou": "out",
"al": "all",
"~": "about",
"yr": "your ",
"ur": "your ",
"u'r": "you're",
"y'r": "you're",
"u'": "you're",
"y'": "you're",
"im": "I'm",
"i'": "I'm",
"i'm": "I'm",
"h'": "he's"
"s'": "she's",
"t'": "they're",
"w'": "we're",
"k'": "can't

"wt": "what",
"wo": "who",
"sm": "some",
"pl: "people",
"me": "me ",
"v1": "everyone ",
"s1": "someone ",
"-1": "no one",
"bc": "because",
"bw": "between",
"ag": "again",
"agt": "against",
"j": "just",
"fx": "for example",
"<": "less",
">": "more",
"2b": "to be",
"ez": "easy",
"l8": "late",
"r8": "rate",
"r8g": "rating",
"f8": "fate",
"m8": "mate",
"d8": "date",
"4k": "fork",
"4c": "foresee",
//"4t": "fort",
"gmt": "government",
"gvt: "government",
"inf": "information",
"dvt": "development",
"rvt": "relevant",
"bf": "before",
"b4": "before",
"hn": "then",
"f0": "often",
"x0": "existence",
"x0c": "existence",
"x0d": "extend",
"xm": "example",
"xp": "experience",
"lk": "like",
"lf": "life",
"tg": "though",
"trg: "through",
"ltg": "although",
"atg": "although",
//"tf": "therefore",
"t4": "therefore",
"gd": "good",
"wk": "work",
"wkg": "working",
"ay": "any",
"ny": "any",
"ut", "out",
"mn": "many",
"ud": "under",

"1": "one",
"2": "two",
"3": "three",
"4": "four",
"5": "five",
"6": "six",
"7": "seven",
"8": "eight",
"9": "nine",
"0": "ten",
"1`": "eleven",
"1~": "eleven",
"12": "twelve",
"13": "thirteen",
"10" "ten",
"20": "twenty",
"30": "thirty",
// This should have logic to produce 11-19, maybe.
"-0": "zero",
"-1": "<-one",
"1:": "1:00"
"2:": "2:00"
"`1:": "11:00"
"12:": "12:00"

"1st": "first",
"1/": "first",
"2/": "second",
"1c": "once",
"#": "number",

"'r": "<'re",
"nt": "<n't",
"n't": "<n't",
".": "<.",
",": "<,",
",\"" "<,\"",
//note that this requires a shift to get the quote, 
// so < may happen in place of ,. 
//Literally all punctuation goes here. May be better to do programmatically.
}